/// prisma client 생성
generator client {
  provider = "prisma-client-js"
}

/// erd 문서 생성
generator erd {
  provider = "prisma-erd-generator"
  /// @see https://github.com/keonik/prisma-erd-generator
  /// svg (default: ./prisma/ERD.svg), png, pdf, md
  output = "../prisma/nestjs-erd.svg"
}

/// 데이터베이스 연결
datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

/// erd 문서 생성
generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "../docs"
}

/// prisma class 생성
generator prismaClassGenerator {
  provider = "prisma-class-generator"
  output   = "../src/@generated"
  dryRun   = false
  useSwagger = true
  swaggerOutput = "../src/@generated/swagger"
  makeIndexFile = true
  indexOutput = "../src/@generated/index.ts"
  separateRelationFields = true
}

/// 유저 모델
model User {
  /// 사용자 시퀀스
  userSeq        Int                 @id @default(autoincrement()) @map("user_seq")
  /// 사용자 식별자
  userId         String              @unique @map("user_id") @db.VarChar(255)
  /// 사용자 명
  userNm         String              @map("user_nm") @db.VarChar(255)
  /// 사용자 비밀번호
  userPwd        String              @map("user_pwd") @db.VarChar(255)
  /// 사용자 폰 번호
  userPhone      String              @map("user_phone") @db.VarChar(255)
  /// 등록자 아이디
  regId          String              @map("reg_id") @db.VarChar(255)
  /// 등록자 명
  regNm          String              @map("reg_nm") @db.VarChar(255)
  /// 등록 일시
  regDt          DateTime            @map("reg_dt") @default(now())
  /// 변경자 아이디
  chgId          String              @map("chg_id") @db.VarChar(255)
  /// 변경자 명
  chgNm          String              @map("chg_nm") @db.VarChar(255)
  /// 변경 일시
  chgDt          DateTime            @map("chg_dt") @updatedAt
  /// 사용자 사용 여부
  userUseYn      YesOrNo @map("user_use_yn")
  /// 사용자 역할 맵핑
  user_role_mapp UserRoleMapp[]

  @@map("tb_user")
}

/// 사용자 역할 맵핑
model UserRoleMapp {
  /// 사용자 시퀀스
  userSeq Int  @map("user_seq")
  /// 역할 시퀀스
  roleSeq Int  @map("role_seq")
  /// 역할 관계
  roles   Role @relation(fields: [roleSeq], references: [roleSeq], onDelete: NoAction, onUpdate: NoAction)
  /// 사용자 관계
  users   User @relation(fields: [userSeq], references: [userSeq], onDelete: NoAction, onUpdate: NoAction)

  @@unique([userSeq, roleSeq], map: "user_seq_role_seq_unique")
  @@index([roleSeq], map: "user_role_mapp_role_seq_fkey")
  @@map("tb_user_role_mapp")
}

/// 역할 모델
model Role {
  /// 역할 시퀀스
  roleSeq        Int            @id @default(autoincrement()) @map("role_seq")
  /// 역할 식별자
  roleId         String         @unique @map("role_id") @db.VarChar(255)
  /// 역할 명
  roleNm         String         @map("role_nm") @db.VarChar(255)
  /// 역할 사용 여부
  roleUseYn      YesOrNo        @map("role_use_yn")
  /// 등록자 아이디
  regId          String              @map("reg_id") @db.VarChar(255)
  /// 등록자 명
  regNm          String              @map("reg_nm") @db.VarChar(255)
  /// 등록 일시
  regDt          DateTime            @map("reg_dt") @default(now())
  /// 변경자 아이디
  chgId          String              @map("chg_id") @db.VarChar(255)
  /// 변경자 명
  chgNm          String              @map("chg_nm") @db.VarChar(255)
  /// 변경 일시
  chgDt          DateTime            @map("chg_dt") @updatedAt
  /// 사용자 역할 맵핑
  user_role_mapp UserRoleMapp[]

  @@map("tb_role")
}

/// Y형식, N 형식
enum YesOrNo {
  Y
  N
}
