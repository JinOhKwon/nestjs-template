generator client {
  provider = "prisma-client-js"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "./docs"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

/// 유저 모델
model User {
  /// 사용자 시퀀스
  userSeq        Int            @id @default(autoincrement()) @map("user_seq")
  /// 사용자 식별자
  userId         String         @unique @map("user_id") @db.VarChar(255)
  /// 사용자 명
  userNm         String         @map("user_nm") @db.VarChar(255)
  /// 사용자 비밀번호
  userPwd        String         @map("user_pwd") @db.VarChar(255)
  /// 사용자 폰 번호
  userPhone      String         @map("user_phone") @db.VarChar(255)
  /// 사용자 사용 여부
  userUseYn      YesOrNo        @default(N) @map("user_use_yn")
  /// 등록자 아이디
  regId          String?        @map("reg_id") @db.VarChar(255)
  /// 등록자 명
  regNm          String?        @map("reg_nm") @db.VarChar(255)
  /// 변경자 아이디
  chgId          String?        @map("chg_id") @db.VarChar(255)
  /// 변경자 명
  chgNm          String?        @map("chg_nm") @db.VarChar(255)
  /// 변경 일시
  chgDt          DateTime       @updatedAt @map("chg_dt")
  /// 등록 일시
  regDt          DateTime       @default(now()) @map("reg_dt")
  user_role_mapp UserRoleMapp[]

  @@map("tb_user")
}

/// 사용자 역할 맵핑
model UserRoleMapp {
  /// 사용자 시퀀스
  userSeq Int     @map("user_seq")
  /// 역할 시퀀스
  roleSeq Int     @map("role_seq")
  /// App 역할 여부
  appRole AppRole @default(USER) @map("app_role")
  roles   Role    @relation(fields: [roleSeq], references: [roleSeq], onDelete: NoAction, onUpdate: NoAction)
  users   User    @relation(fields: [userSeq], references: [userSeq], onDelete: NoAction, onUpdate: NoAction)

  @@unique([userSeq, roleSeq], map: "user_seq_role_seq_unique")
  @@index([roleSeq], map: "user_role_mapp_role_seq_fkey")
  @@map("tb_user_role_mapp")
}

/// 역할 모델
model Role {
  /// 역할 시퀀스
  roleSeq        Int            @id @default(autoincrement()) @map("role_seq")
  /// 역할 식별자
  roleId         String         @unique @map("role_id") @db.VarChar(255)
  /// 역할 명
  roleNm         String         @map("role_nm") @db.VarChar(255)
  /// 역할 사용 여부
  roleUseYn      YesOrNo        @default(N) @map("role_use_yn")
  /// 변경 일시
  chgDt          DateTime       @updatedAt @map("chg_dt")
  /// 변경자 아이디
  chgId          String         @map("chg_id") @db.VarChar(255)
  /// 변경자 명
  chgNm          String         @map("chg_nm") @db.VarChar(255)
  /// 등록 일시
  regDt          DateTime       @default(now()) @map("reg_dt")
  /// 등록자 아이디
  regId          String         @map("reg_id") @db.VarChar(255)
  /// 등록자 명
  regNm          String         @map("reg_nm") @db.VarChar(255)
  user_role_mapp UserRoleMapp[]

  @@map("tb_role")
}

/// Y or N
enum YesOrNo {
  /// 여
  Y
  /// 부
  N
}

/// 역할
enum AppRole {
  /// 슈퍼관리자
  SUPER
  /// 관리자
  MANAGER
  /// 사용자
  USER
}
